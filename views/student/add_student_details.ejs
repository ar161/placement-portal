<!-- views/student/add_student_details.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Details Form</title>
</head>
<body>
    <h1>Enter Student Details</h1>
    <% if (error) { %>
        <div style="color: red;"><%= error %></div>
    <% } else if (success) { %>
        <div style="color: green;"><%= success %></div>
    <% } %>
    <form action="/student/add_student_details" method="post">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" value="<%= student ? student.name : '' %>" disabled><br>
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" value="<%= student ? student.username : '' %>" disabled><br>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" value="<%= student ? student.email : '' %>" disabled><br>
        <label for="batch">Batch:</label>
        <input type="text" id="batch" name="batch" value="<%= isMaster && student ? student.batch : '' %>" <% if (isMaster) { %>disabled<% } %> required><br>
        <label for="program">Program:</label>
        <select id="program" name="program" <% if (isMaster) { %>disabled<% } %> required>
            <option value="">Select Program</option>        </select><br>
        <label for="stream">Stream:</label>
        <select id="stream" name="stream" <% if (isMaster) { %>disabled<% } %> required>
            <option value="">Select Stream</option>
        </select><br>
        <label for="cgpa">CGPA:</label>
        <input type="number" step="0.01" id="cgpa" name="cgpa" value="<%= isMaster && student ? student.cgpa : '' %>" <% if (isMaster) { %>disabled<% } %> required><br>
        <label for="backlogs">Backlogs:</label>
        <input type="number" id="backlogs" name="backlogs" value="<%= isMaster && student ? student.backlogs : '' %>" <% if (isMaster) { %>disabled<% } %> required><br>
        <label for="tenth_percent">Tenth Percent:</label>
        <input type="number" step="0.01" id="tenth_percent" name="tenth_percent" value="<%= isMaster && student ? student.tenth_percent : '' %>" <% if (isMaster) { %>disabled<% } %> required><br>
        <label for="twelfth_percent">Twelfth Percent:</label>
        <input type="number" step="0.01" id="twelth_percent" name="twelth_percent" value="<%= isMaster && student ? student.twelth_percent : '' %>" <% if (isMaster) { %>disabled<% } %> required><br>
        <% if (!isMaster) { %>
          <!-- Render the button if the user is not a master -->
          <button type="submit" id="submitButton">Submit</button>
        <% } else { %>
          <!-- Render a disabled button if the user is a master -->
          <button type="button"id="disabledButton">Submit</button>
        <% } %>
    </form>
    <div id="message" style="display: none; color: red;">Data already submitted. Please contact TPO.</div>

    <script>
        // Add event listener to the disabled button if it exists
        const disabledButton = document.getElementById('disabledButton');
        if (disabledButton) {
            disabledButton.addEventListener('click', function() {
                if (<%= isMaster %>) {
                    document.getElementById('message').style.display = 'block';
                }
            });
        }

        // Function to fetch programs and populate the dropdown
        function fetchProgramsAndPopulateDropdown() {
            fetch('/placement_officer/program_planning/all')
            .then(response => response.json())
            .then(programs => {
                const programDropdown = document.getElementById('program');
                programDropdown.innerHTML = '<option value="">Select Program</option>';
                programs.forEach(program => {
                    const option = document.createElement('option');
                    option.value = program.program_id;
                    option.textContent = program.program_name;
                    programDropdown.appendChild(option);
                });
            })
            .catch(error => console.error('Error fetching programs:', error));
        }

        /// Define a global object to cache the fetched streams data
        const cachedStreams = {};

        // Function to fetch streams for the selected program and populate the dropdown
        function fetchStreamsAndPopulateDropdown(programId) {
            // Check if streams for the given programId are already cached
            if (cachedStreams[programId]) {
                // If cached, directly populate the streams dropdown
                populateStreamsDropdown(cachedStreams[programId]);
            } else {
                // If not cached, fetch the streams data from the server
                fetch(`/placement_officer/stream_planning/${programId}`)
                .then(response => response.json())
                .then(streams => {
                    // Cache the fetched streams data
                    cachedStreams[programId] = streams;
                    // Populate the streams dropdown
                    populateStreamsDropdown(streams);
                })
                .catch(error => console.error('Error fetching streams:', error));
            }
        }

        // Function to populate the streams dropdown
        function populateStreamsDropdown(streams) {
            const streamDropdown = document.getElementById('stream');
            streamDropdown.innerHTML = '<option value="">Select Stream</option>';
            streams.forEach(stream => {
                const option = document.createElement('option');
                option.value = stream.stream_id;
                option.textContent = stream.stream_name;
                streamDropdown.appendChild(option);
            });
        }

        // Add event listener for program dropdown change
        document.getElementById('program').addEventListener('change', function() {
            const selectedProgramId = this.value;
            if (selectedProgramId) {
                fetchStreamsAndPopulateDropdown(selectedProgramId);
            } else {
                // Clear stream dropdown if no program is selected
                const streamDropdown = document.getElementById('stream');
                streamDropdown.innerHTML = '<option value="">Select Stream</option>';
            }
        });

        // Fetch programs when the page loads
        fetchProgramsAndPopulateDropdown();
    </script>
</body>
</html>